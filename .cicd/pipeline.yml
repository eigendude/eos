env:
  BUILD_TIMEOUT: 120
  TEST_TIMEOUT: 60
  TIMEOUT: 120
  VERBOSE: true
  DEBUG: true

steps:

  - label: ":webhook: Trigger Travis CI Build"
    command:
      - "./.cicd/travis/travis-trigger.sh"
    agents:
      queue: "automation-basic-builder-fleet"

  - trigger: "eosio-base-images-beta"
    label: ":docker: Ensure Base Images"
    build:
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"

  - wait

  - label: ":aws: [Amazon] 2 Build & Test"
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-amazonlinux-2-cc8d19ea479663d98189ce2473aacc2a7567a8be"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_AMAZON_LINUX_2

  - label: ":centos: [CentOS] 7 Build & Test"
    command:
      - ""
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: true
          image: "eosio/producer:eosio-centos-7-61150e3338126b91bd9384821be93de5e9f8b3fe"
          environment:
            # - "ENABLE_LR_TESTS=true"
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_CENTOS_7

  - label: ":ubuntu: [Ubuntu] 16.04 Build & Test"
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-16.04-8c7529f2357cadbf6dc8d1be8fca379efd25af64"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_UBUNTU_16

  - label: ":ubuntu: [Ubuntu] 18.04 Build & Test"
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-18.04-45ddde8129587d53014a8cb7ef2214a01ea346da"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_UBUNTU_18

  - label: ":darwin: [Darwin] 10.14 Build & Test"
    command:
      - "brew install git graphviz libtool gmp llvm@4 pkgconfig python python@2 doxygen libusb openssl boost@1.70 cmake mongodb"
      - "git clone $BUILDKITE_REPO eos && cd eos && git checkout $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eos && mkdir -p build && cd build && cmake .."
      - "cd eos/build && make -j$(getconf _NPROCESSORS_ONLN)"
      - "if ${ENABLE_PARALLEL_TESTS:-true}; then cd eos/build && ctest -j$(getconf _NPROCESSORS_ONLN) -LE _tests --output-on-failure -T Test; fi"
      - "if ${ENABLE_SERIAL_TESTS:-true}; then cd eos/build && mkdir -p ./mongodb && mongod --dbpath ./mongodb --fork --logpath mongod.log && ctest -L nonparallelizable_tests --output-on-failure -T Test; fi"
      - "if ${ENABLE_LR_TESTS:-false}; then cd eos/build && ctest -L long_running_tests --output-on-failure -T Test; fi"
      - "cd eos && tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    plugins:
      - chef/anka#v0.5.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.14.4_6C_14G_40G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          modify-cpu: 12
          modify-ram: 24
          always-pull: true
          debug: true
          wait-network: true
    agents:
      - "queue=mac-anka-large-node-fleet"
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_MOJAVE

  - wait:
    continue_on_failure: true

  # - command: |
  #     echo '+++ :compression: Extracting Test Metrics Code'
  #     tar -zxf .cicd/metrics/test-metrics.tar.gz
  #     echo '+++ :javascript: Running test-metrics.js'
  #     node --max-old-space-size=32768 test-metrics.js
  #   label: ":bar_chart: Test Metrics"
  #   agents:
  #     queue: "automation-eos-builder-fleet"
  #   timeout: 10
  #   soft_fail: true

  # - wait

  - label: ":centos: [Centos] 7 PB"
    command:
      - "cd /workdir && buildkite-agent artifact download build.tar.gz . --step ':centos: [CentOS] 7 Build & Test' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package-builder.sh"
    plugins:
      - docker#v3.2.0:
          debug: true
          image: "eosio/producer:eosio-centos-7-61150e3338126b91bd9384821be93de5e9f8b3fe"
          environment:
            # - "ENABLE_LR_TESTS=true"
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    agents:
      queue: "automation-eos-builder-fleet"
    timeout: 10

  - label: ":ubuntu: [Ubuntu] 16.04 PB"
    command:
      - "cd /workdir && buildkite-agent artifact download build.tar.gz . --step ':ubuntu: [Ubuntu] 16.04 Build & Test' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package-builder.sh"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-16.04-8c7529f2357cadbf6dc8d1be8fca379efd25af64"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    agents:
      queue: "automation-eos-builder-fleet"
    timeout: 10

  - label: ":ubuntu: [Ubuntu] 18.04 PB"
    command:
      - "cd /workdir && buildkite-agent artifact download build.tar.gz . --step ':ubuntu: [Ubuntu] 18.04 Build & Test' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package-builder.sh"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-18.04-45ddde8129587d53014a8cb7ef2214a01ea346da"
          environment:
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload/download
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload/download (JOB_ID, etc)
    agents:
      queue: "automation-eos-builder-fleet"
    timeout: 10

  - label: ":darwin: [Mojave] PB"
    command:
      - "git clone $BUILDKITE_REPO eos && cd eos && git checkout $BUILDKITE_COMMIT"
      - "cd eos && buildkite-agent artifact download build.tar.gz . --step ':darwin: [Darwin] 10.14 Build & Test' && tar -xzf build.tar.gz"
      - "cd eos && ./.cicd/package-builder.sh"
    plugins:
      - chef/anka#v0.5.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.14.4_6C_14G_40G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          always-pull: true
          debug: true
          wait-network: true
    agents:
      - "queue=mac-anka-node-fleet"
    timeout: 10

  - label: ":git: Git Submodule Regression Check"
    command:
      - "./.cicd/submodule-regression-checker.sh"
    agents:
      queue: "automation-basic-builder-fleet"
    timeout: 5
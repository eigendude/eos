env:
  BUILD_TIMEOUT: 120
  TEST_TIMEOUT: 60
  TIMEOUT: 120
  VERBOSE: true

steps:

  - label: ":webhook: Trigger Travis CI Build"
    command:
      - "./.cicd/travis/travis-trigger.sh"
    agents:
      queue: "automation-eos-builder-fleet"

  - trigger: "eosio-base-images-beta"
    label: ":docker: Ensure base images exist"
    build:
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"

  - wait

  - label: ":aws: [Amazon] 2 Build"
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-amazonlinux-2-2bfa68283db71fe9c7fff8e38ce273481a6c045e"
          environment:
            - "ENABLE_LR_TESTS=true"
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload (JOB_ID, etc)
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_AMAZON_LINUX_2

  - label: ":centos: [CentOS] 7 Build"
    command:
      - ""
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: true
          image: "eosio/producer:eosio-centos-7-8d787567f70fabbb7111fe8b5669bd3d6a7ea7f0"
          environment:
            - "ENABLE_LR_TESTS=true"
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload (JOB_ID, etc)
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_CENTOS_7

  - label: ":ubuntu: [Ubuntu] 16.04 Build"
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-16.04-7eb7ff2b13b08ea133d307fe1c7b0e17d790cb4d"
          environment:
            - "ENABLE_LR_TESTS=true"
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload (JOB_ID, etc)
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_UBUNTU_16

  - label: ":ubuntu: [Ubuntu] 18.04 Build"
    agents:
      queue: "automation-eos-builder-fleet"
    plugins:
      - docker#v3.2.0:
          debug: $DEBUG
          image: "eosio/producer:eosio-ubuntu-18.04-97c66ab9db7382be04dea9e9598fd110d66432f1"
          environment:
            - "ENABLE_LR_TESTS=true"
            - "BUILDKITE_AGENT_ACCESS_TOKEN" # Needed for buildkite-agent upload
          mount-buildkite-agent: false # Mounting bk-agent doesn't work, so disable it
          propagate-environment: true # Need for buildkite-agent upload (JOB_ID, etc)
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_UBUNTU_18

  - label: ":darwin: [Darwin] 10.14 Build"
    command:
      - "brew install git graphviz libtool gmp llvm@4 pkgconfig python python@2 doxygen libusb openssl boost@1.70 cmake"
      - "git clone $BUILDKITE_REPO eos && cd eos && git checkout $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eos && mkdir -p build && cd build && cmake .."
      - "cd eos/build && make -j$(getconf _NPROCESSORS_ONLN)"
      - "if $ENABLE_PARALLEL_TESTS; then ctest -j$(getconf _NPROCESSORS_ONLN) -LE _tests --output-on-failure -T Test; fi"
      - "if $ENABLE_SERIAL_TESTS; then mkdir -p ./mongodb && mongod --dbpath ./mongodb --fork --logpath mongod.log && ctest -L nonparallelizable_tests --output-on-failure -T Test; fi"
      - "if $ENABLE_LR_TESTS; then ctest -L long_running_tests --output-on-failure -T Test; fi"
      - "if $ENABLE_PACKAGE_BUILDER; then cd eos && ./.cicd/package-builder.sh; fi"
      - "if $ENABLE_SUBMODULE_REGRESSION_TEST; then cd eos && ./.cicd/submodule-regression-checker.sh; fi"
    plugins:
      - chef/anka#v0.5.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.14.4_6C_14G_40G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew"
          modify-cpu: 12
          modify-ram: 24
          always-pull: true
          debug: true
          wait-network: true
    agents:
      - "queue=mac-anka-large-node-fleet"
    timeout: $BUILD_TIMEOUT
    skip: $SKIP_MOJAVE